[global_tags]
[agent]
  interval = '10s'
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = '0s'
  flush_interval = '10s'
  flush_jitter = '0s'
  precision = ''
  debug = false
  quiet = false
  logfile = '/var/log/telegraf/telegraf.log'
  hostname = ''
  omit_hostname = false
[[outputs.influxdb]]
  urls = ['http://localhost:8086'] # required
  database = 'telegraf' # required
  retention_policy = ''
  write_consistency = 'any'
  timeout = '5s'

[[inputs.httpjson]]
  name = 'puppet_stats'
  servers = [
    <%# -%>
    <% unless $master_list.empty {-%>
    <% $master_list.each |$master| {-%>
    "https://<%= $master %>:8140/status/v1/services?level=debug",
    <% } -%>
    <% } -%>
    <%# -%>
  ]
  method = 'GET'
  insecure_skip_verify = true

[[inputs.httpjson]]
  name = 'puppetdb_command_queue'
  servers = [
    <%# -%>
    <% unless $puppetdb_list.empty {-%>
    <% $puppetdb_list.each |$puppetdb| {-%>
    "https://<%= $puppetdb %>:8081/status/v1/services?level=debug",
    <% } -%>
    <% } -%>
    <%# -%>
  ]
  method = 'GET'
  insecure_skip_verify = true

<%# -%>
<% unless $puppetdb_metrics.empty {-%>
<% $puppetdb_metrics.each | $metric| {-%>
[[inputs.httpjson]]
  name = "puppetdb_<%= $metric['name'] %>"
  servers = [
    <%# -%>
    <% unless $puppetdb_list.empty {-%>
    <% $puppetdb_list.each |$puppetdb| {-%>
    "https://<%= $puppetdb %>:8081/metrics/v1/mbeans/<%= $metric['url'] %>",
    <% } -%>
    <% } -%>
    <%# -%>
  ]
  method = 'GET'
  insecure_skip_verify = true

<% } -%>
<% } -%>
<%# -%>

<% if $postgres_host {-%>

[[inputs.postgresql_extensible]]
  address = "postgres://telegraf@<%= $postgres_host %>/pe-puppetdb?sslmode=require&sslkey=/etc/telegraf/grafana-server.platform9.puppet.net.private_key.pem&sslcert=/etc/telegraf/grafana-server.platform9.puppet.net.public_key.pem&sslrootcert=/etc/telegraf/ca.pem"
  databases = ["pe-puppetdb","pe-rbac","pe-activity","pe-classifier"]
  [[inputs.postgresql_extensible.query]]
    sqlquery="SELECT * FROM pg_stat_database"
    version=901
    withdbname=false
    tagvalue=""
  [[inputs.postgresql_extensible.query]]
    sqlquery="SELECT relname as s_table, pg_relation_size(relid) As size FROM pg_catalog.pg_statio_user_tables ORDER BY pg_total_relation_size(relid) DESC"
    version=901
    withdbname=false
    tagvalue="s_table"
  [[inputs.postgresql_extensible.query]]
    sqlquery="select relname as v_table, autovacuum_count, vacuum_count, n_live_tup, n_dead_tup from pg_stat_user_tables"
    version=901
    withdbname=false
    tagvalue="v_table"
  [[inputs.postgresql_extensible.query]]
    sqlquery="select relname as io_table, heap_blks_read, heap_blks_hit, idx_blks_read, idx_blks_hit, toast_blks_read, toast_blks_hit, tidx_blks_read, tidx_blks_hit from pg_statio_user_tables"
    version=901
    withdbname=false
    tagvalue="io_table"

<% } -%>
